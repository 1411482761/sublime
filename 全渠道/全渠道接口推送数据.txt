1.根据portal后台接收的调拨建议单号,获取该调拨单所有的拆单号
2.循环遍历每一个拆单号进行如下操作:
   1) 根据拆单号获取调入调出仓相关数据(fromWarehouseCode,fromWarehouseName,toWarehouseCode...)
   2) 根据同一拆单号查询与该拆单号相关的所有明细数据(itemCode,itemName,colorCode,colorName...)
   3) 封装数据 每一条数据包括一个拆单号,一个调入仓一个调出仓等 以及该拆单号对应的多条具体明细(下方数据示例中的lstDetailDO)
   4) 发送请求推送数据 ,接收接口返回信息
   5) 解析信息:
   			如果返回信息是推送成功 , 将该拆单号下的所有数据的ispush字段改成"Y";
   			如果返回信息报错,将错误信息返回给上一级(暂时不抛异常),
   			上层方法中用一个字符串接收接口返回值,成功返回值为"",失败返回值为异常信息.
   			(假如拆单号1 2 3的数据推送成功之后,1 2 3 的相关数据状态改成已推送,拆单号4推送失败,拆单号4的相关数据状态不变,仍是未推送,之后的异常信息中会有拆单号4中的异常;之后拆单号5 可以继续推数据,成功改变状态为已推送,失败则仍是未推送...)
3.当所有拆单号数据都推送一遍之后,检查接收信息的字符串长度是否大于0(是否有异常信息)
  有异常信息,则抛出异常,没有异常信息,则显示"SUCCESS";
  假设多个拆单号数据异常,异常信息进行字符串拼接,一起抛出;
   			



   		
 附  : 推送的数据结构如下: {
				  "alloThirdDO": {
				    "lstDetailDO": [{
				      "sizeName": "无",
				      "itemName": "运动袜",
				      "sizeCode": "00",
				      "colorName": "白色",
				      "qty": 10,
				      "itemCode": "982238512492",
				      "colorCode": "0100"
				    },
				    {
				      "sizeName": "无",
				      "itemName": "运动袜",
				      "sizeCode": "00",
				      "colorName": "白色",
				      "qty": 10,
				      "itemCode": "982238512492",
				      "colorCode": "0100"
				    }],
				    "fromWarehouseCode": "01250017",
				    "userName": "TEST",
				    "remarks": "TEST",
				    "alloDate": "2018-07-2014:26:55",
				    "toWarehouseName": "光谷风彩店",
				    "fromWarehouseName": "一仓",
				    "toWarehouseCode": "X1714985",
				    "orgID": "12",
				    "user": "TEST"
				  }  

